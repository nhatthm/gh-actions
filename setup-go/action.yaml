---
name: 'Setup Go environment'
description: 'Setup a Go environment and add it to the PATH'

inputs:
  go-version:
    description: 'The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.'
  use-cache:
    description: 'Whether to use the Go cache. Defaults to true.'
    default: "true"
  cache-path:
    description: 'The cache path to use.'
    default: |
      ~/go/pkg/mod
      ~/.cache/go-build
  cache-key:
    description: 'The cache key to use. Defaults to <OS>-go-<GO-VERSION>-cache-<GO_MOD_HASH>.'
  cache-restore-keys:
    description: 'The cache restore keys to use. Defaults to <OS>-go-<GO-VERSION>-cache.'

outputs:
  go-version:
    description: 'The installed Go version. Useful when given a version range as input.'
    value: ${{ steps.setup.outputs.go-version }}

runs:
  using: "composite"
  steps:
    - id: setup
      uses: actions/setup-go@v6
      with:
        go-version: ${{ inputs.go-version }}

    - shell: bash
      run: |
        cacheKey=${{ inputs.cache-key }}
        cacheRestoreKeys=${{ inputs.cache-restore-keys }}

        echo "CACHE_KEY=${cacheKey:-${{ runner.os }}-go-${{ inputs.go-version }}-cache-${{ hashFiles('**/go.sum') }}}" >> "$GITHUB_ENV"
        echo "CACHE_RESTORE_KEYS=${cacheRestoreKeys:-${{ runner.os }}-go-${{ inputs.go-version }}-cache}" >> "$GITHUB_ENV"

    - name: Go cache
      uses: actions/cache@v4
      if: ${{ inputs.use-cache == 'true' }}
      with:
        path: ${{ inputs.cache-path }}
        key: ${{ env.CACHE_KEY }}
        restore-keys: ${{ env.CACHE_RESTORE_KEYS }}
